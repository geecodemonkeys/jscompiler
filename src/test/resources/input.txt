function filip(a,b,c,d) {if (a == 5 / c * 54 && a/4==f*3 || ff!=5) {}}###
function filip() {if (document.someFunct() / 10 == this.prop * 5) {}}###
function filip() {if (document.someFunct() / 10 == this.prop * 5 && !true != (c | f)) {}}###
function filip() {if ((new Object()).prop1 == null  ^ (true && flag)) {}}###
function filip() {if (((new Object()).prop1 + 5 - 4 / (i++)) > this.number) {}}###
function filip() {if ((5 + 6 % 3) >= b) {}}###
function filip() {if ((((5))) >= (((b)))) {}}###
function filip() {if (!b && !c || d) {}}###
function filip() {if (a<<2>5) {}}###
function filip() {if ((-this.prop*3)<=(-this.writeln())) {}}###
var1 = 5;###
var1 = 5.6;###
var1 = "some_text\"";###
var1 = [];###
var1 = [1,2,3];###
var1 = ["a", "b", "c"];###
var1 = [a * b / 5, c % f];###
var1 = (function (a) {})(5);###
var1 = this.someProp.someOtherProp.prop1.prop2;###
var1 = a && b || c && !f ? trueVar : falseVar;###
var1 = --a + ++f*d++;###
var1 = (new new new new Object(a))()[1]().prop;###
var1 = +a * d--;###
var1 = typeof x=="undefined";###
var1 = x instanceof String;###
var a,b,c,d;###
var a = 5 * 6 / 2 * a, d = "haha" + "haha";###
while (i < 5) i = i + 1;###
while (i < 5) { var a = 5; }###
do i = i + 1; while ( i < 5);###
do{ i = i + 1;} while (i < 5);###
function filip(a) {return a + 1;}###
function filip(a) {return ;}###
if (a) {aa = 3;} else if (b) {bb=4;} else if (c) {cc1=5;} else {lastMostInner=10;}###
while (i < 10) {if (i * i > 50) break;}###
while (i < 10) {if (i * i > 50) continue;}###
with (a < 5) r = 5;###
with (a < 5){ f = 5; }###
label1 : while (i < 10) {if (i * i > 50) break label1;}###
label1 : while (i < 10) {if (i * i > 50) continue label1;}###
try { throw new Exception(); } catch (e) { print("error"); } finally {clean();}###
try { throw new Exception(); } finally {clean();}###
try { throw new Exception(); } catch (e) { print("error"); }###
var objectLiteral = {};###
var objectLiteralNotEmthy = {"prop1" : "val1", 4 : "four", id : 5};###
var objectLiteralNotEmthy = {id : function(){return 5;}};###
switch (a) {}###
switch (a) {case 1:case 2:case 3:}###
switch (a) {case 1:break; default:break;}###
for (var a in [1,2,3,4]) {}###
for (;;) {a = 5;}###
for (var i =0; i <5 ; i++) {}###
label1 : while (i < 10) {if (i * i > 50) break label1}###
label1 : while (i < 10) {if (i * i > 50) continue label1}###
function func(){return
5+5}###
var a = funct
(d +
c
)###
for (;
;) {}###
if(cond)a/=5###
a=a/5###
c[0]/=5###
if(cond) /haha/.exec()###
var a = /\w+\/\\/ig###
/\w+\/\\/ig.exec()###
variable /= /\w+\/\\/.exec()###
variable /= 10 / /\w+\/\\/.exec()###
/\n\\r/.exec()###
function outer() {function inner() {}}###
function outer() {if (true) {function fstatement(){}}}
